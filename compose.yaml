services:
  adminer:
    image: adminer
    restart: unless-stopped
    environment:
      ADMINER_DEFAULT_SERVER: postgres_vocabulary_api
    ports:
      - 38080:8080
    networks:
      - vocabulary-api-network
  postgres_vocabulary_api:
    image: 'postgres:15-alpine'
    volumes:
      - postgres-vocabulary-api:/var/lib/postgresql/data
    environment:
      - 'POSTGRES_DB=vocabulary_api'
      - 'POSTGRES_PASSWORD=enrico'
      - 'POSTGRES_USER=enrico'
    ports:
      - 25432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vocabulary_api"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - vocabulary-api-network
  postgres_keycloak:
    image: 'postgres:15-alpine'
    volumes:
      - postgres-keycloak:/var/lib/postgresql/data
    environment:
      - 'POSTGRES_DB=keycloak-vocabulary-db'
      - 'POSTGRES_PASSWORD=keycloak'
      - 'POSTGRES_USER=keycloak'
    labels:
      org.springframework.boot.ignore: true
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - vocabulary-api-network
  keycloak:
    image: 'quay.io/keycloak/keycloak:latest'
    env_file:
      - .env
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KC_BOOTSTRAP_ADMIN_USERNAME}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KC_BOOTSTRAP_ADMIN_PASSWORD}
      KC_HOSTNAME_STRICT: "true"
      KC_HTTP_ENABLED: "true"
      KC_HTTPS_ENABLED: "false"



    command:
      - start-dev
      - --db=postgres
      - --db-url=jdbc:postgresql://postgres_keycloak:5432/keycloak-vocabulary-db
      - --db-username=keycloak
      - --db-password=keycloak
      - --import-realm
    volumes:
      - ./keycloak/vocabulary-realm.json:/opt/keycloak/data/import/vocabulary-realm.json
    ports:
      - 18081:8080
    networks:
      - vocabulary-api-network
    depends_on:
      postgres_keycloak:
        condition: service_healthy
volumes:
  postgres-vocabulary-api:
    driver: local
  postgres-keycloak:
    driver: local
networks:
  vocabulary-api-network:
    driver: bridge
